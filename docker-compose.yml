services:
  nginx:
    image: nginx:1.23-alpine
    ports:
      - 80:80
    depends_on:
      - web
    volumes:
      - static_volume:/home/app/web/staticfiles:ro
      - ./backend/nginx/demo.conf:/etc/nginx/templates/default.conf.template
    restart: always

  web:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: demo
      args:
        VERSION: demo
    image: spellbook-backend
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    volumes:
      - static_volume:/home/app/web/staticfiles:rw
    env_file:
      - backend/.env
      - path: backend/secrets.env
        required: false
    environment:
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: spellbook_db_test
      SQL_USER: test_user
      SQL_PASSWORD: test_password
      SQL_HOST: db
      SQL_PORT: 5432
      DATABASE: postgres
      SECRET_KEY: demo-secret-key
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://127.0.0.1:8000/ || exit 1"
      start_period: 20s
      interval: 10s
      timeout: 10s
      retries: 100
    restart: always

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      PGPORT: 5432
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: spellbook_db_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d spellbook_db_test -U test_user" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  discord-bot:
    build:
      context: .
      dockerfile: bot/discord/Dockerfile
    image: spellbook-discord-bot
    depends_on:
      web:
        condition: service_healthy
    links:
      - web
    env_file:
      - bot/discord/.env
      - path: bot/discord/secrets.env
        required: false
    environment:
      SPELLBOOK_API_URL: http://web:8000
    restart: always

  # reddit-bot:
  #   build:
  #     context: .
  #     dockerfile: bot/reddit/Dockerfile
  #   image: spellbook-reddit-bot
  #   depends_on:
  #     web:
  #       condition: service_healthy
  #   links:
  #     - web
  #   env_file:
  #     - bot/reddit/.env
  #     - path: bot/reddit/secrets.env
  #       required: false
  #   environment:
  #     SPELLBOOK_API_URL: http://web:8000
  #   restart: always

  telegram-bot:
    build:
      context: .
      dockerfile: bot/telegram/Dockerfile
    image: spellbook-telegram-bot
    depends_on:
      web:
        condition: service_healthy
    links:
      - web
    env_file:
      - bot/telegram/.env
      - path: bot/telegram/secrets.env
        required: false
    environment:
      SPELLBOOK_API_URL: http://web:8000
    restart: always


volumes:
  static_volume:
  postgres_data:
