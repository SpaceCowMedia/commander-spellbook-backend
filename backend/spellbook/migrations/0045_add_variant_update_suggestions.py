# Generated by Django 5.1.1 on 2025-05-19 18:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def migrate_update_suggestion_permissions(apps, schema_editor):
    VariantUpdateSuggestion = apps.get_model('spellbook', 'VariantUpdateSuggestion')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    permissions = Permission.objects.filter(content_type=ContentType.objects.get_for_model(VariantUpdateSuggestion))
    User = apps.get_model(settings.AUTH_USER_MODEL)
    for user in User.objects.prefetch_related('user_permissions'):
        user.user_permissions.add(*permissions)


class Migration(migrations.Migration):

    dependencies = [
        ('spellbook', '0044_alter_combo_mana_needed_alter_variant_mana_needed_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='variantsuggestion',
            name='comment',
            field=models.TextField(blank=True, help_text='Comment written by the user that suggested this', max_length=1024, validators=[django.core.validators.RegexValidator(message='Unpaired double square brackets are not allowed.', regex='^(?:[^\\[]*(?:\\[(?!\\[)|\\[{2}[^\\[]+\\]{2}|\\[{3,}))*[^\\[]*$'), django.core.validators.RegexValidator(message='Symbols must be in the {1}{W}{U}{B}{R}{G}{B/P}{A}{E}{T}{Q}... format.', regex='^(?:[^\\{]*\\{(?:(?:2\\/[WUBRG]|W\\/U|W\\/B|B\\/R|B\\/G|U\\/B|U\\/R|R\\/G|R\\/W|G\\/W|G\\/U)(?:\\/P)?|CHAOS|PW|TK|[WUBRG](?:\\/P)?|[1-9][0-9]{1,2}|H[WUBRG]|[0-9CPXYZSTQEA½∞])\\})*[^\\{]*$'), django.core.validators.RegexValidator(message='Only ordinary characters are allowed.', regex='^[\\x0A\\x0D\\x20-\\x7E\\x80\\x95\\x99\\xA1\\xA9\\xAE\\xB0\\xB1-\\xB3\\xBC-\\xFF]*$')]),
        ),
        migrations.AlterField(
            model_name='variantsuggestion',
            name='suggested_by',
            field=models.ForeignKey(blank=True, editable=False, help_text='User that suggested this', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='VariantUpdateSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('N', 'New'), ('AD', 'Awaiting Discussion'), ('PA', 'Pending Approval'), ('A', 'Accepted'), ('R', 'Rejected')], default='N', help_text='Suggestion status for editors', max_length=2)),
                ('comment', models.TextField(blank=True, help_text='Comment written by the user that suggested this', max_length=1024, validators=[django.core.validators.RegexValidator(message='Unpaired double square brackets are not allowed.', regex='^(?:[^\\[]*(?:\\[(?!\\[)|\\[{2}[^\\[]+\\]{2}|\\[{3,}))*[^\\[]*$'), django.core.validators.RegexValidator(message='Symbols must be in the {1}{W}{U}{B}{R}{G}{B/P}{A}{E}{T}{Q}... format.', regex='^(?:[^\\{]*\\{(?:(?:2\\/[WUBRG]|W\\/U|W\\/B|B\\/R|B\\/G|U\\/B|U\\/R|R\\/G|R\\/W|G\\/W|G\\/U)(?:\\/P)?|CHAOS|PW|TK|[WUBRG](?:\\/P)?|[1-9][0-9]{1,2}|H[WUBRG]|[0-9CPXYZSTQEA½∞])\\})*[^\\{]*$'), django.core.validators.RegexValidator(message='Only ordinary characters are allowed.', regex='^[\\x0A\\x0D\\x20-\\x7E\\x80\\x95\\x99\\xA1\\xA9\\xAE\\xB0\\xB1-\\xB3\\xBC-\\xFF]*$')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('kind', models.CharField(choices=[('NW', 'Not Working'), ('SE', 'Spelling Error'), ('II', 'Incorrect Info'), ('WC', 'Wrong Card'), ('O', 'Other')], help_text='Type of suggestion', max_length=2)),
                ('issue', models.TextField(help_text='Description of the problem', validators=[django.core.validators.RegexValidator(message='Unpaired double square brackets are not allowed.', regex='^(?:[^\\[]*(?:\\[(?!\\[)|\\[{2}[^\\[]+\\]{2}|\\[{3,}))*[^\\[]*$'), django.core.validators.RegexValidator(message='Symbols must be in the {1}{W}{U}{B}{R}{G}{B/P}{A}{E}{T}{Q}... format.', regex='^(?:[^\\{]*\\{(?:(?:2\\/[WUBRG]|W\\/U|W\\/B|B\\/R|B\\/G|U\\/B|U\\/R|R\\/G|R\\/W|G\\/W|G\\/U)(?:\\/P)?|CHAOS|PW|TK|[WUBRG](?:\\/P)?|[1-9][0-9]{1,2}|H[WUBRG]|[0-9CPXYZSTQEA½∞])\\})*[^\\{]*$'), django.core.validators.RegexValidator(message='Only ordinary characters are allowed.', regex='^[\\x0A\\x0D\\x20-\\x7E\\x80\\x95\\x99\\xA1\\xA9\\xAE\\xB0\\xB1-\\xB3\\xBC-\\xFF]*$')])),
                ('solution', models.TextField(blank=True, help_text='Description of the solution', validators=[django.core.validators.RegexValidator(message='Unpaired double square brackets are not allowed.', regex='^(?:[^\\[]*(?:\\[(?!\\[)|\\[{2}[^\\[]+\\]{2}|\\[{3,}))*[^\\[]*$'), django.core.validators.RegexValidator(message='Symbols must be in the {1}{W}{U}{B}{R}{G}{B/P}{A}{E}{T}{Q}... format.', regex='^(?:[^\\{]*\\{(?:(?:2\\/[WUBRG]|W\\/U|W\\/B|B\\/R|B\\/G|U\\/B|U\\/R|R\\/G|R\\/W|G\\/W|G\\/U)(?:\\/P)?|CHAOS|PW|TK|[WUBRG](?:\\/P)?|[1-9][0-9]{1,2}|H[WUBRG]|[0-9CPXYZSTQEA½∞])\\})*[^\\{]*$'), django.core.validators.RegexValidator(message='Only ordinary characters are allowed.', regex='^[\\x0A\\x0D\\x20-\\x7E\\x80\\x95\\x99\\xA1\\xA9\\xAE\\xB0\\xB1-\\xB3\\xBC-\\xFF]*$')])),
                ('suggested_by', models.ForeignKey(blank=True, editable=False, help_text='User that suggested this', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'variant update suggestion',
                'verbose_name_plural': 'variant update suggestions',
                'ordering': [models.Case(models.When(status='N', then=models.Value(0)), models.When(status='PA', then=models.Value(1)), models.When(status='AD', then=models.Value(2)), models.When(status='A', then=models.Value(3)), models.When(status='R', then=models.Value(4)), default=models.Value(10)), 'created'],
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='VariantInVariantUpdateSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.TextField(blank=True, help_text='Description of the issue specific for this variant', validators=[django.core.validators.RegexValidator(message='Unpaired double square brackets are not allowed.', regex='^(?:[^\\[]*(?:\\[(?!\\[)|\\[{2}[^\\[]+\\]{2}|\\[{3,}))*[^\\[]*$'), django.core.validators.RegexValidator(message='Symbols must be in the {1}{W}{U}{B}{R}{G}{B/P}{A}{E}{T}{Q}... format.', regex='^(?:[^\\{]*\\{(?:(?:2\\/[WUBRG]|W\\/U|W\\/B|B\\/R|B\\/G|U\\/B|U\\/R|R\\/G|R\\/W|G\\/W|G\\/U)(?:\\/P)?|CHAOS|PW|TK|[WUBRG](?:\\/P)?|[1-9][0-9]{1,2}|H[WUBRG]|[0-9CPXYZSTQEA½∞])\\})*[^\\{]*$'), django.core.validators.RegexValidator(message='Only ordinary characters are allowed.', regex='^[\\x0A\\x0D\\x20-\\x7E\\x80\\x95\\x99\\xA1\\xA9\\xAE\\xB0\\xB1-\\xB3\\xBC-\\xFF]*$')])),
                ('variant', models.ForeignKey(help_text='Variant used in this suggestion', on_delete=django.db.models.deletion.CASCADE, related_name='variant_update_suggestions', to='spellbook.variant')),
                ('suggestion', models.ForeignKey(help_text='Variant update suggestion this variant is used in', on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='spellbook.variantupdatesuggestion')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('variant', 'suggestion'), name='unique_variant_in_update_suggestion', violation_error_message='This variant is already linked to this update suggestion.')],
            },
        ),
        migrations.RunPython(code=migrate_update_suggestion_permissions, reverse_code=migrations.RunPython.noop),
    ]
